function varargout = RTDataGUI(varargin)
% RTDATAGUI Calls the user interface for RTData experiments
%
%      RTDATAGUI is a user interface which allows the setting up and use of
%      a microcontroller burned with the Matlab-Arduino-RTData toolbox
%      provided execution code.
%
%      This should result in the ability to acquire up to 12 channels, at
%      up to (at least) 1kHz (each), while also ensuing commands through
%      (for now) one digital output.
%
%      RTDATAGUI doesn't need any arguments.
%      
%      The normal following course of events would be to press the SET
%      button, prescribe the serial port where the micro-controller is
%      plugged in, and then at some point press the GO button. 
%
%      Real-Time Data acquisition should ensue. It can be stopped by
%      closing the real-time display figure.
%
%      Data can be saved either automatically or on button press.
%
% See also: RTData
%   Copyright (c) 2017, Thomas Duriez (Distributed under GPLv3)

%% Copyright
%    Copyright (c) 2017, Thomas Duriez (thomas.duriez@gmail.com)
%
%    This program is free software: you can redistribute it and/or modify
%    it under the terms of the GNU General Public License as published by
%    the Free Software Foundation, either version 3 of the License, or
%    (at your option) any later version.
%
%    This program is distributed in the hope that it will be useful,
%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%    GNU General Public License for more details.
%
%    You should have received a copy of the GNU General Public License
%    along with this program.  If not, see <http://www.gnu.org/licenses/>.


gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @RTDataGUI_OpeningFcn, ...
                   'gui_OutputFcn',  @RTDataGUI_OutputFcn, ...
                   'gui_LayoutFcn',  @RTDataGUI_LayoutFcn, ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end



% --- Executes just before RTDataGUI is made visible.
function RTDataGUI_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to RTDataGUI (see VARARGIN)

% By default, ouput the current RTData object;
handles.output = RTData;
guidata(hObject, handles);
SetGUIToValue(handles);
activate(handles,'Configuration','on')
activate(handles,'Display','off');
activate(handles,'Options','off');
activate(handles,'Control','off');

display_folder(handles);


% Update handles structure
%set(gcf,'closeRequestFcn',[])
set(gcf, 'Position', get(0,'Screensize')); % Maximize figure. 



% UIWAIT makes RTDataGUI wait for user response (see UIRESUME)
 uiwait(handles.figure1);

function show_case(TheAxe,TheData)
    axes(TheAxe);
    plot(TheData.Time,TheData.Data,'*');
    delta=max(TheData.Data(:))-min(TheData.Data(:));
    if max(TheData.Action)>0
        hold on
        plot(TheData.Time,TheData.Action*delta+min(TheData.Data(:)),'k');
        hold off
    end
    set(gca,'xlim',[0 TheData.Time(end)]);
    
        
 
function activate(handles,group,state)
        switch group
            case 'Display'
                list_handles={'NbPointsEdt','GraphFreqEdt','TimeSpanEdt','GoBttn'};
            case 'Options'
                list_handles={'SaveMatCheck','SaveTxtCheck','NameEdt','EditNotesBttn'};
            case 'Configuration'
                list_handles={'SetBttn'};
            case 'Control'
                list_handles={'CtrlTypeMenu','CtrlSettingsBttn'};
        end
        
        for i=1:numel(list_handles)
            set(handles.(list_handles{i}),'Enable',state)
        end
        
function display_folder(handles)
    d=dir('*.mat');
    theString=cell(1,numel(d));
    for i=1:numel(d)
        theString{i}=d(i).name;
    end
    set(handles.MatList,'String',theString,'Value',1);
          
function displayHardware(handles)
    if ~isempty(handles.output.Hardware.Port)
        disptxt{1}=sprintf('Port: %s',handles.output.Hardware.Port);
    else
        set(handles.ConfigList,'String','Not configured','Value',1);
        return
    end
    disptxt{2}=sprintf('Board:      %s',handles.output.Hardware.Arduino);
    disptxt{3}=sprintf('Loop delay: %d ms, (%.2f Hz)',handles.output.Hardware.Delay,1000/handles.output.Hardware.Delay);
    disptxt{4}=sprintf('Averaging:  %d points',handles.output.Hardware.nMeasures);
    disptxt{5}=sprintf('Channels:   %d',handles.output.Hardware.Channels);
    set(handles.ConfigList,'String',disptxt);
    
function displayControl(handles)
    if ~isempty(handles.output.Control)
        disptxt{1}=sprintf('Type: %s',handles.output.Control.Type);
    else
        set(handles.ControlList,'String','No control','Value',1);
        return
    end
    switch lower(handles.output.Control.Type)
        case 'stagedsequence'
            disptxt{2}=sprintf('Pulse Width: %d ms',handles.output.Control.PulseWidth);
            disptxt{3}=sprintf('#: %d',handles.output.Control.Repetition);
            disptxt{4}=sprintf('Every: %d ms',handles.output.Control.Delay);
    end
    set(handles.ControlList,'String',disptxt);

    

    
function SetGUIToValue(handles);
    
    set(handles.NbPointsEdt,'String',sprintf('%d',handles.output.nPoints));
    set(handles.GraphFreqEdt,'String',sprintf('%d',handles.output.fRefresh));
    set(handles.TimeSpanEdt,'String',sprintf('%d',handles.output.tFrame));
    set(handles.NameEdt,'String',sprintf('%s',handles.output.Name));
    displayHardware(handles);
    displayControl(handles)
    
function SetValueToGUI(handles);
    NbPointsEdt_Callback(handles.NbPointsEdt,[],handles);
    GraphFreqEdt_Callback(handles.GraphFreqEdt,[],handles);
    TimeSpanEdt_Callback(handles.TimeSpanEdt,[],handles);
    SaveMatCheck_Callback(handles.SaveMatCheck,[],handles);
    SaveTxtCheck_Callback(handles.SaveTxtCheck,[],handles);
    NameEdt_Callback(handles.NameEdt,[],handles);

% --- Outputs from this function are returned to the command line.
function varargout = RTDataGUI_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
set(hObject,'closeRequestFcn','closereq')
close(hObject);
varargout{1} = handles.output;





function GraphFreqEdt_Callback(hObject, eventdata, handles)
% hObject    handle to GraphFreqEdt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
handles.output.fRefresh=str2double(get(hObject,'String'));
% Hints: get(hObject,'String') returns contents of GraphFreqEdt as text
%        str2double(get(hObject,'String')) returns contents of GraphFreqEdt as a double


% --- Executes during object creation, after setting all properties.
function GraphFreqEdt_CreateFcn(hObject, eventdata, handles)
% hObject    handle to GraphFreqEdt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

function NbPointsEdt_Callback(hObject, eventdata, handles)
% hObject    handle to TimeSpanEdt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
handles.output.nPoints=str2double(get(hObject,'String'));
% Hints: get(hObject,'String') returns contents of TimeSpanEdt as text
%        str2double(get(hObject,'String')) returns contents of TimeSpanEdt as a double


% --- Executes during object creation, after setting all properties.
function NbPointsEdt_CreateFcn(hObject, eventdata, handles)
% hObject    handle to TimeSpanEdt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


function TimeSpanEdt_Callback(hObject, eventdata, handles)
% hObject    handle to TimeSpanEdt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
handles.output.tFrame=str2double(get(hObject,'String'));
% Hints: get(hObject,'String') returns contents of TimeSpanEdt as text
%        str2double(get(hObject,'String')) returns contents of TimeSpanEdt as a double


% --- Executes during object creation, after setting all properties.
function TimeSpanEdt_CreateFcn(hObject, eventdata, handles)
% hObject    handle to TimeSpanEdt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end




% --- Executes on button press in GoBttn.
function GoBttn_Callback(hObject, eventdata, handles)
% hObject    handle to GoBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
activate(handles,'Configuration','off');
activate(handles,'Display','off');
activate(handles,'Control','off');
handles.output.acquire;
while ~handles.output.acquired
    pause(0.01)
end
show_case(handles.AxeDisplay,handles.output);
display_folder(handles);


% --- Executes on selection change in MatList.
function MatList_Callback(hObject, eventdata, handles)
% hObject    handle to MatList (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
contents = cellstr(get(hObject,'String'));
filename=contents{get(hObject,'Value')};
show_RT=load(filename);
show_case(handles.AxeDisplay,show_RT.acquis);
% Hints: contents = cellstr(get(hObject,'String')) returns MatList contents as cell array
%        contents{get(hObject,'Value')} returns selected item from MatList


% --- Executes during object creation, after setting all properties.
function MatList_CreateFcn(hObject, eventdata, handles)
% hObject    handle to MatList (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in NewBttn.
function NewBttn_Callback(hObject, eventdata, handles)
% hObject    handle to NewBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
new_RTData=copy(handles.output);
handles.output=new_RTData;
guidata(hObject,handles);
%handles.output.STLCheck;
activate(handles,'Display','on');
activate(handles,'Control','on');
activate(handles,'Configuration','on');


% --- Executes on button press in CloseBttn.
function CloseBttn_Callback(hObject, eventdata, handles)
% hObject    handle to CloseBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
uiresume;


function NotesEdt_Callback(hObject, eventdata, handles)
% hObject    handle to NotesEdt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of NotesEdt as text
%        str2double(get(hObject,'String')) returns contents of NotesEdt as a double


% --- Executes during object creation, after setting all properties.
function NotesEdt_CreateFcn(hObject, eventdata, handles)
% hObject    handle to NotesEdt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in SaveMatCheck.
function SaveMatCheck_Callback(hObject, eventdata, handles)
% hObject    handle to SaveMatCheck (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if get(hObject,'Value') && get(handles.SaveTxtCheck,'Value')
    handles.output.Save=2;
elseif get(hObject,'Value') && ~get(handles.SaveTxtCheck,'Value')
    handles.output.Save=1;
elseif ~get(hObject,'Value') && get(handles.SaveTxtCheck,'Value')
    handles.output.Save=-2;
else
    handles.output.Save=0;
end
% Hint: get(hObject,'Value') returns toggle state of SaveMatCheck


% --- Executes on button press in SaveTxtCheck.
function SaveTxtCheck_Callback(hObject, eventdata, handles)
% hObject    handle to SaveTxtCheck (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if get(hObject,'Value') && get(handles.SaveMatCheck,'Value')
    handles.output.Save=2;
elseif get(hObject,'Value') && ~get(handles.SaveMatCheck,'Value')
    handles.output.Save=-2;
elseif ~get(hObject,'Value') && get(handles.SaveMatCheck,'Value')
    handles.output.Save=1;
else
    handles.output.Save=0;
end
% Hint: get(hObject,'Value') returns toggle state of SaveTxtCheck



function NameEdt_Callback(hObject, eventdata, handles)
% hObject    handle to NameEdt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
handles.output.Name=get(hObject,'String');
% Hints: get(hObject,'String') returns contents of NameEdt as text
%        str2double(get(hObject,'String')) returns contents of NameEdt as a double


% --- Executes during object creation, after setting all properties.
function NameEdt_CreateFcn(hObject, eventdata, handles)
% hObject    handle to NameEdt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in EditNotesBttn.
function EditNotesBttn_Callback(hObject, eventdata, handles)
% hObject    handle to EditNotesBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in ChangeDirBttn.
function ChangeDirBttn_Callback(hObject, eventdata, handles)
% hObject    handle to ChangeDirBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cd(uigetdir);
display_folder(handles);


% --- Executes on button press in CheckBttn.
function CheckBttn_Callback(hObject, eventdata, handles)
% hObject    handle to CheckBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
[~,~,~,actual_delay,~]=handles.output.STLCheck;
set(handles.CheckTxt,'String',sprintf('%d ms (%.2f Hz)',actual_delay,1000000/actual_delay));


% --- Executes on button press in SetBttn.
function SetBttn_Callback(hObject, eventdata, handles)
% hObject    handle to SetBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
HardwareSettings(handles.output);
activate(handles,'Display','on')
activate(handles,'Options','on')
activate(handles,'Control','on')
SetGUIToValue(handles);



% --- Executes on button press in ChooseBttn.
function ChooseBttn_Callback(hObject, eventdata, handles)
% hObject    handle to ChooseBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

[TheName,ThePath]=uigetfile('*.m');
handles.PostProcessFcn=fullfile(ThePath,TheName);

[~,fNAME,~] = fileparts(handles.PostProcessFcn);
set(handles.PostText,'String',fNAME);
guidata(hObject,handles);


% --- Executes on button press in SetCurrentBttn.
function SetCurrentBttn_Callback(hObject, eventdata, handles)
% hObject    handle to SetCurrentBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
contents = cellstr(get(handles.MatList,'String'));
filename=contents{get(handles.MatList,'Value')};
show_RT=load(filename);
handles.output=show_RT.acquis;
SetValueToGUI(handles);
guidata(hObject,handles);




% --- Executes on button press in ShowCurrentBttn.
function ShowCurrentBttn_Callback(hObject, eventdata, handles)
% hObject    handle to ShowCurrentBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
show_case(handles.AxeDisplay,handles.output);


% --- Executes on button press in ApplyBttn.
function ApplyBttn_Callback(hObject, eventdata, handles)
% hObject    handle to ApplyBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
%try
curdir=pwd;
    [ThePath,TheName] = fileparts(handles.PostProcessFcn);
    cd(ThePath)
    feval(TheName,handles.output);
    cd(curdir);
%catch
%end


% --- Executes on button press in SaveBttn.
function SaveBttn_Callback(hObject, eventdata, handles)
% hObject    handle to SaveBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
cstate=handles.output.Save;
handles.output.Save=1;
handles.output.save;
handles.output.Save=cstate;
display_folder(handles);


% --- Executes on selection change in CtrlTypeMenu.
function CtrlTypeMenu_Callback(hObject, eventdata, handles)
% hObject    handle to CtrlTypeMenu (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns CtrlTypeMenu contents as cell array
%        contents{get(hObject,'Value')} returns selected item from CtrlTypeMenu


% --- Executes during object creation, after setting all properties.
function CtrlTypeMenu_CreateFcn(hObject, eventdata, handles)
% hObject    handle to CtrlTypeMenu (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in CtrlSettingsBttn.
function CtrlSettingsBttn_Callback(hObject, eventdata, handles)
% hObject    handle to CtrlSettingsBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
CtrlTypes=get(handles.CtrlTypeMenu,'String');
CtrlType=CtrlTypes{get(handles.CtrlTypeMenu,'Value')};
switch CtrlType
    case 'None'
        handles.output.Control=[];
    case 'Staged Sequence'
        StageSequence(handles.output);
    case 'Law'
    case 'MLC'
end
displayControl(handles);


% --- Executes on button press in EmptyBttn.
function EmptyBttn_Callback(hObject, eventdata, handles)
% hObject    handle to EmptyBttn (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
RTDataGUI_OpeningFcn(hObject, eventdata, handles);



% --- Executes on selection change in ConfigList.
function ConfigList_Callback(hObject, eventdata, handles)
% hObject    handle to ConfigList (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns ConfigList contents as cell array
%        contents{get(hObject,'Value')} returns selected item from ConfigList


% --- Executes during object creation, after setting all properties.
function ConfigList_CreateFcn(hObject, eventdata, handles)
% hObject    handle to ConfigList (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on selection change in ControlList.
function ControlList_Callback(hObject, eventdata, handles)
% hObject    handle to ControlList (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns ControlList contents as cell array
%        contents{get(hObject,'Value')} returns selected item from ControlList


% --- Executes during object creation, after setting all properties.
function ControlList_CreateFcn(hObject, eventdata, handles)
% hObject    handle to ControlList (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Creates and returns a handle to the GUI figure. 
function h1 = RTDataGUI_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end

appdata = [];
appdata.GUIDEOptions = struct(...
    'active_h', [], ...
    'taginfo', struct(...
    'figure', 2, ...
    'text', 17, ...
    'axes', 3, ...
    'popupmenu', 4, ...
    'edit', 11, ...
    'uipanel', 9, ...
    'pushbutton', 18, ...
    'listbox', 4, ...
    'checkbox', 3), ...
    'override', 1, ...
    'release', [], ...
    'resize', 'simple', ...
    'accessibility', 'callback', ...
    'mfile', 1, ...
    'callbacks', 1, ...
    'singleton', 1, ...
    'syscolorfig', 1, ...
    'blocking', 0, ...
    'lastSavedFile', 'C:\Users\thomas\Documents\MATLAB\Matlab-Arduino-RTData\RTDataGUI.m', ...
    'lastFilename', 'C:\Users\thomas\Documents\MATLAB\Matlab-Arduino-RTData\RTDataGUI.fig');
appdata.lastValidTag = 'figure1';
appdata.GUIDELayoutEditor = [];
appdata.initTags = struct(...
    'handle', [], ...
    'tag', 'figure1');

h1 = figure(...
'PaperUnits','inches',...
'Units','characters',...
'Position',[135.714285714286 7.74519230769231 185.2 49.6923076923077],...
'Visible',get(0,'defaultfigureVisible'),...
'Color',get(0,'defaultfigureColor'),...
'CloseRequestFcn',get(0,'defaultfigureCloseRequestFcn'),...
'CurrentAxesMode','manual',...
'CurrentObjectMode','manual',...
'CurrentPointMode','manual',...
'SelectionTypeMode','manual',...
'ResizeFcn',blanks(0),...
'IntegerHandle','off',...
'NextPlot',get(0,'defaultfigureNextPlot'),...
'Alphamap',get(0,'defaultfigureAlphamap'),...
'WindowButtonDownFcn',blanks(0),...
'WindowButtonUpFcn',blanks(0),...
'WindowButtonMotionFcn',blanks(0),...
'WindowScrollWheelFcn',blanks(0),...
'WindowKeyPressFcn',blanks(0),...
'WindowKeyReleaseFcn',blanks(0),...
'MenuBar','none',...
'ToolBar',get(0,'defaultfigureToolBar'),...
'Pointer',get(0,'defaultfigurePointer'),...
'PointerShapeHotSpot',get(0,'defaultfigurePointerShapeHotSpot'),...
'Name','RTDataGUI',...
'NumberTitle','off',...
'WindowStyle',get(0,'defaultfigureWindowStyle'),...
'DockControls',get(0,'defaultfigureDockControls'),...
'Resize',get(0,'defaultfigureResize'),...
'PaperPosition',get(0,'defaultfigurePaperPosition'),...
'PaperSize',[8.5 11],...
'PaperType','usletter',...
'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
'PaperOrientation',get(0,'defaultfigurePaperOrientation'),...
'ScreenPixelsPerInchMode','manual',...
'KeyPressFcn',blanks(0),...
'KeyReleaseFcn',blanks(0),...
'HandleVisibility','callback',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','figure1',...
'UserData',[]);

appdata = [];
appdata.lastValidTag = 'AxeDisplay';

h2 = axes(...
'Parent',h1,...
'FontUnits',get(0,'defaultaxesFontUnits'),...
'Units',get(0,'defaultaxesUnits'),...
'CameraMode',get(0,'defaultaxesCameraMode'),...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'CameraTarget',[0.5 0.5 0.5],...
'CameraTargetMode',get(0,'defaultaxesCameraTargetMode'),...
'CameraViewAngle',6.60861036031192,...
'CameraViewAngleMode',get(0,'defaultaxesCameraViewAngleMode'),...
'Position',[0.401294498381877 0.428129829984544 0.56957928802589 0.491499227202473],...
'ActivePositionProperty','position',...
'ActivePositionPropertyMode',get(0,'defaultaxesActivePositionPropertyMode'),...
'DataSpaceMode',get(0,'defaultaxesDataSpaceMode'),...
'PlotBoxAspectRatio',[1 0.602272727272727 0.602272727272727],...
'PlotBoxAspectRatioMode',get(0,'defaultaxesPlotBoxAspectRatioMode'),...
'ColorSpaceMode',get(0,'defaultaxesColorSpaceMode'),...
'ChildContainerMode',get(0,'defaultaxesChildContainerMode'),...
'DecorationContainerMode',get(0,'defaultaxesDecorationContainerMode'),...
'XRulerMode',get(0,'defaultaxesXRulerMode'),...
'XTick',[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],...
'XTickMode',get(0,'defaultaxesXTickMode'),...
'XTickLabel',{  '0'; '0.1'; '0.2'; '0.3'; '0.4'; '0.5'; '0.6'; '0.7'; '0.8'; '0.9'; '1' },...
'XTickLabelMode',get(0,'defaultaxesXTickLabelMode'),...
'XBaselineMode',get(0,'defaultaxesXBaselineMode'),...
'YRulerMode',get(0,'defaultaxesYRulerMode'),...
'YTick',[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],...
'YTickMode',get(0,'defaultaxesYTickMode'),...
'YTickLabel',{  '0'; '0.1'; '0.2'; '0.3'; '0.4'; '0.5'; '0.6'; '0.7'; '0.8'; '0.9'; '1' },...
'YTickLabelMode',get(0,'defaultaxesYTickLabelMode'),...
'YBaselineMode',get(0,'defaultaxesYBaselineMode'),...
'ZRulerMode',get(0,'defaultaxesZRulerMode'),...
'ZBaselineMode',get(0,'defaultaxesZBaselineMode'),...
'AmbientLightSourceMode',get(0,'defaultaxesAmbientLightSourceMode'),...
'SortMethod','childorder',...
'SortMethodMode',get(0,'defaultaxesSortMethodMode'),...
'Tag','AxeDisplay',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

h3 = get(h2,'title');

set(h3,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0 0 0],...
'ColorMode','auto',...
'Position',[0.500001150550264 1.00864779874214 0.499999999999998],...
'PositionMode','auto',...
'Interpreter','tex',...
'InterpreterMode','auto',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontNameMode','auto',...
'FontUnitsMode','auto',...
'FontSize',11,...
'FontSizeMode','auto',...
'FontAngle','normal',...
'FontAngleMode','auto',...
'FontWeight','bold',...
'FontWeightMode','auto',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','bottom',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'EdgeColorMode','auto',...
'LineStyle','-',...
'LineStyleMode','auto',...
'LineWidth',0.5,...
'LineWidthMode','auto',...
'BackgroundColor','none',...
'BackgroundColorMode','auto',...
'Margin',3,...
'MarginMode','auto',...
'Clipping','off',...
'ClippingMode','auto',...
'Layer','middle',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'UnitsMode','auto',...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'HG1EraseMode','auto',...
'BusyAction','queue',...
'Interruptible','on',...
'SelectionHighlight','on',...
'SelectionHighlightMode','auto',...
'HitTest','on',...
'HitTestMode','auto',...
'PickableParts','visible',...
'PickablePartsMode','auto',...
'XLimInclude','on',...
'XLimIncludeMode','auto',...
'YLimInclude','on',...
'YLimIncludeMode','auto',...
'ZLimInclude','on',...
'ZLimIncludeMode','auto',...
'CLimInclude','on',...
'CLimIncludeMode','auto',...
'ALimInclude','on',...
'ALimIncludeMode','auto',...
'Description','Axes Title',...
'DescriptionMode','auto',...
'Visible','on',...
'VisibleMode','auto',...
'Serializable','on',...
'SerializableMode','auto',...
'HandleVisibility','off',...
'HandleVisibilityMode','auto',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto');

h4 = get(h2,'xlabel');

set(h4,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0.15 0.15 0.15],...
'ColorMode','auto',...
'Position',[0.500000476837158 -0.0744234784906514 0],...
'PositionMode','auto',...
'Interpreter','tex',...
'InterpreterMode','auto',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontNameMode','auto',...
'FontUnitsMode','auto',...
'FontSize',11,...
'FontSizeMode','auto',...
'FontAngle','normal',...
'FontAngleMode','auto',...
'FontWeight','normal',...
'FontWeightMode','auto',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','top',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'EdgeColorMode','auto',...
'LineStyle','-',...
'LineStyleMode','auto',...
'LineWidth',0.5,...
'LineWidthMode','auto',...
'BackgroundColor','none',...
'BackgroundColorMode','auto',...
'Margin',3,...
'MarginMode','auto',...
'Clipping','off',...
'ClippingMode','auto',...
'Layer','back',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'UnitsMode','auto',...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'HG1EraseMode','auto',...
'BusyAction','queue',...
'Interruptible','on',...
'SelectionHighlight','on',...
'SelectionHighlightMode','auto',...
'HitTest','on',...
'HitTestMode','auto',...
'PickableParts','visible',...
'PickablePartsMode','auto',...
'XLimInclude','on',...
'XLimIncludeMode','auto',...
'YLimInclude','on',...
'YLimIncludeMode','auto',...
'ZLimInclude','on',...
'ZLimIncludeMode','auto',...
'CLimInclude','on',...
'CLimIncludeMode','auto',...
'ALimInclude','on',...
'ALimIncludeMode','auto',...
'Description','NumericRuler Label',...
'DescriptionMode','auto',...
'Visible','on',...
'VisibleMode','auto',...
'Serializable','on',...
'SerializableMode','auto',...
'HandleVisibility','off',...
'HandleVisibilityMode','auto',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto');

h5 = get(h2,'ylabel');

set(h5,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0.15 0.15 0.15],...
'ColorMode','auto',...
'Position',[-0.053661615089184 0.500000476837158 0],...
'PositionMode','auto',...
'Interpreter','tex',...
'InterpreterMode','auto',...
'Rotation',90,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontNameMode','auto',...
'FontUnitsMode','auto',...
'FontSize',11,...
'FontSizeMode','auto',...
'FontAngle','normal',...
'FontAngleMode','auto',...
'FontWeight','normal',...
'FontWeightMode','auto',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','bottom',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'EdgeColorMode','auto',...
'LineStyle','-',...
'LineStyleMode','auto',...
'LineWidth',0.5,...
'LineWidthMode','auto',...
'BackgroundColor','none',...
'BackgroundColorMode','auto',...
'Margin',3,...
'MarginMode','auto',...
'Clipping','off',...
'ClippingMode','auto',...
'Layer','back',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'UnitsMode','auto',...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'HG1EraseMode','auto',...
'BusyAction','queue',...
'Interruptible','on',...
'SelectionHighlight','on',...
'SelectionHighlightMode','auto',...
'HitTest','on',...
'HitTestMode','auto',...
'PickableParts','visible',...
'PickablePartsMode','auto',...
'XLimInclude','on',...
'XLimIncludeMode','auto',...
'YLimInclude','on',...
'YLimIncludeMode','auto',...
'ZLimInclude','on',...
'ZLimIncludeMode','auto',...
'CLimInclude','on',...
'CLimIncludeMode','auto',...
'ALimInclude','on',...
'ALimIncludeMode','auto',...
'Description','NumericRuler Label',...
'DescriptionMode','auto',...
'Visible','on',...
'VisibleMode','auto',...
'Serializable','on',...
'SerializableMode','auto',...
'HandleVisibility','off',...
'HandleVisibilityMode','auto',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto');

h6 = get(h2,'zlabel');

set(h6,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0.15 0.15 0.15],...
'ColorMode','auto',...
'Position',[0 0 0],...
'PositionMode','auto',...
'Interpreter','tex',...
'InterpreterMode','auto',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontNameMode','auto',...
'FontUnitsMode','auto',...
'FontSize',10,...
'FontSizeMode','auto',...
'FontAngle','normal',...
'FontAngleMode','auto',...
'FontWeight','normal',...
'FontWeightMode','auto',...
'HorizontalAlignment','left',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','middle',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'EdgeColorMode','auto',...
'LineStyle','-',...
'LineStyleMode','auto',...
'LineWidth',0.5,...
'LineWidthMode','auto',...
'BackgroundColor','none',...
'BackgroundColorMode','auto',...
'Margin',3,...
'MarginMode','auto',...
'Clipping','off',...
'ClippingMode','auto',...
'Layer','middle',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'UnitsMode','auto',...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'HG1EraseMode','auto',...
'BusyAction','queue',...
'Interruptible','on',...
'SelectionHighlight','on',...
'SelectionHighlightMode','auto',...
'HitTest','on',...
'HitTestMode','auto',...
'PickableParts','visible',...
'PickablePartsMode','auto',...
'XLimInclude','on',...
'XLimIncludeMode','auto',...
'YLimInclude','on',...
'YLimIncludeMode','auto',...
'ZLimInclude','on',...
'ZLimIncludeMode','auto',...
'CLimInclude','on',...
'CLimIncludeMode','auto',...
'ALimInclude','on',...
'ALimIncludeMode','auto',...
'Description','NumericRuler Label',...
'DescriptionMode','auto',...
'Visible','off',...
'VisibleMode','auto',...
'Serializable','on',...
'SerializableMode','auto',...
'HandleVisibility','off',...
'HandleVisibilityMode','auto',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto');

appdata = [];
appdata.lastValidTag = 'uipanel8';

h7 = uipanel(...
'Parent',h1,...
'FontUnits',get(0,'defaultuipanelFontUnits'),...
'Units',get(0,'defaultuipanelUnits'),...
'Title','Postprocessing',...
'Position',[0.19 0.363214837712519 0.175 0.204018547140649],...
'Tag','uipanel8',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'ChooseBttn';

h8 = uicontrol(...
'Parent',h7,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Choose process',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.0691823899371069 0.675 0.69811320754717 0.266666666666667],...
'Callback',@(hObject,eventdata)RTDataGUI('ChooseBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','ChooseBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'PostText';

h9 = uicontrol(...
'Parent',h7,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',{  blanks(0); 'No Processing' },...
'Style','text',...
'Position',[0.0817610062893082 0.366666666666667 0.823899371069182 0.308333333333333],...
'Children',[],...
'Tag','PostText',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'ApplyBttn';

h10 = uicontrol(...
'Parent',h7,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Apply post procces',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.0817610062893082 0.0916666666666667 0.817610062893082 0.266666666666667],...
'Callback',@(hObject,eventdata)RTDataGUI('ApplyBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'KeyPressFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','ApplyBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'uipanel6';

h11 = uipanel(...
'Parent',h1,...
'FontUnits',get(0,'defaultuipanelFontUnits'),...
'Units',get(0,'defaultuipanelUnits'),...
'Title','Control',...
'Position',[0.19 0.565687789799073 0.175 0.19629057187017],...
'ChildrenMode','manual',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','uipanel6');

appdata = [];
appdata.lastValidTag = 'CtrlTypeMenu';

h12 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',{  'None'; 'Staged Sequence'; 'Law'; 'MLC'; '        ' },...
'Style','popupmenu',...
'Value',1,...
'ValueMode',get(0,'defaultuicontrolValueMode'),...
'Position',[0.306145471980145 0.765703861356035 0.641255605381166 0.195804195804196],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RTDataGUI('CtrlTypeMenu_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ParentMode','manual',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RTDataGUI('CtrlTypeMenu_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','CtrlTypeMenu');

appdata = [];
appdata.lastValidTag = 'ControlList';

h13 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','No control',...
'Style','listbox',...
'Value',1,...
'ValueMode',get(0,'defaultuicontrolValueMode'),...
'Position',[0.0754716981132076 0.0695652173913043 0.559748427672956 0.652173913043478],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RTDataGUI('ControlList_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ParentMode','manual',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RTDataGUI('ControlList_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','ControlList');

appdata = [];
appdata.lastValidTag = 'uipanel2';

h14 = uipanel(...
'Parent',h1,...
'FontUnits',get(0,'defaultuipanelFontUnits'),...
'Units',get(0,'defaultuipanelUnits'),...
'Title','Display',...
'Position',[0.0185128046899105 0.423902471995062 0.168929342795433 0.340847523219814],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','uipanel2',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuipanelFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'text9';

h15 = uicontrol(...
'Parent',h14,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'HorizontalAlignment','left',...
'ListboxTop',get(0,'defaultuicontrolListboxTop'),...
'Max',get(0,'defaultuicontrolMax'),...
'Min',get(0,'defaultuicontrolMin'),...
'SliderStep',get(0,'defaultuicontrolSliderStep'),...
'String','# Points in graph',...
'Style','text',...
'Value',get(0,'defaultuicontrolValue'),...
'Position',[0.1 0.810276679841897 0.8 0.110671936758893],...
'BackgroundColor',get(0,'defaultuicontrolBackgroundColor'),...
'Callback',blanks(0),...
'Children',[],...
'ForegroundColor',get(0,'defaultuicontrolForegroundColor'),...
'Enable',get(0,'defaultuicontrolEnable'),...
'TooltipString',blanks(0),...
'Visible',get(0,'defaultuicontrolVisible'),...
'KeyPressFcn',blanks(0),...
'KeyReleaseFcn',blanks(0),...
'HandleVisibility',get(0,'defaultuicontrolHandleVisibility'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','text9',...
'UserData',[],...
'FontSize',10,...
'FontName',get(0,'defaultuicontrolFontName'),...
'FontAngle',get(0,'defaultuicontrolFontAngle'),...
'FontWeight',get(0,'defaultuicontrolFontWeight'));

appdata = [];
appdata.lastValidTag = 'text4';

h16 = uicontrol(...
'Parent',h14,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'HorizontalAlignment','left',...
'ListboxTop',get(0,'defaultuicontrolListboxTop'),...
'Max',get(0,'defaultuicontrolMax'),...
'Min',get(0,'defaultuicontrolMin'),...
'SliderStep',get(0,'defaultuicontrolSliderStep'),...
'String','Graph refresh frequency',...
'Style','text',...
'Value',get(0,'defaultuicontrolValue'),...
'Position',[0.1 0.490118577075099 0.8 0.114624505928854],...
'BackgroundColor',get(0,'defaultuicontrolBackgroundColor'),...
'Callback',blanks(0),...
'Children',[],...
'ForegroundColor',get(0,'defaultuicontrolForegroundColor'),...
'Enable',get(0,'defaultuicontrolEnable'),...
'TooltipString',blanks(0),...
'Visible',get(0,'defaultuicontrolVisible'),...
'KeyPressFcn',blanks(0),...
'KeyReleaseFcn',blanks(0),...
'HandleVisibility',get(0,'defaultuicontrolHandleVisibility'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','text4',...
'UserData',[],...
'FontSize',10,...
'FontName',get(0,'defaultuicontrolFontName'),...
'FontAngle',get(0,'defaultuicontrolFontAngle'),...
'FontWeight',get(0,'defaultuicontrolFontWeight'));

appdata = [];
appdata.lastValidTag = 'text5';

h17 = uicontrol(...
'Parent',h14,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'HorizontalAlignment','left',...
'ListboxTop',get(0,'defaultuicontrolListboxTop'),...
'Max',get(0,'defaultuicontrolMax'),...
'Min',get(0,'defaultuicontrolMin'),...
'SliderStep',get(0,'defaultuicontrolSliderStep'),...
'String','Time span',...
'Style','text',...
'Value',get(0,'defaultuicontrolValue'),...
'Position',[0.1 0.260869565217391 0.8 0.0671936758893281],...
'BackgroundColor',get(0,'defaultuicontrolBackgroundColor'),...
'Callback',blanks(0),...
'Children',[],...
'ForegroundColor',get(0,'defaultuicontrolForegroundColor'),...
'Enable',get(0,'defaultuicontrolEnable'),...
'TooltipString',blanks(0),...
'Visible',get(0,'defaultuicontrolVisible'),...
'KeyPressFcn',blanks(0),...
'KeyReleaseFcn',blanks(0),...
'HandleVisibility',get(0,'defaultuicontrolHandleVisibility'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','text5',...
'UserData',[],...
'FontSize',10,...
'FontName',get(0,'defaultuicontrolFontName'),...
'FontAngle',get(0,'defaultuicontrolFontAngle'),...
'FontWeight',get(0,'defaultuicontrolFontWeight'));

appdata = [];
appdata.lastValidTag = 'NbPointsEdt';

h18 = uicontrol(...
'Parent',h14,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',{  'Edit Text' },...
'Style','edit',...
'Position',[0.1 0.695652173913043 0.758139534883721 0.15],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RTDataGUI('NbPointsEdt_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RTDataGUI('NbPointsEdt_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','NbPointsEdt',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'GraphFreqEdt';

h19 = uicontrol(...
'Parent',h14,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',{  'Edit Text' },...
'Style','edit',...
'Position',[0.1 0.375494071146245 0.758139534883721 0.15],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RTDataGUI('GraphFreqEdt_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'KeyPressFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RTDataGUI('GraphFreqEdt_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','GraphFreqEdt',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'TimeSpanEdt';

h20 = uicontrol(...
'Parent',h14,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',{  'Edit Text' },...
'Style','edit',...
'Position',[0.1 0.102766798418972 0.758139534883721 0.15],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RTDataGUI('TimeSpanEdt_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'KeyPressFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RTDataGUI('TimeSpanEdt_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','TimeSpanEdt',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'uipanel1';

h21 = uipanel(...
'Parent',h1,...
'FontUnits',get(0,'defaultuipanelFontUnits'),...
'Units',get(0,'defaultuipanelUnits'),...
'Title','Configuration arduino',...
'Position',[0.02248126561199 0.773936170212766 0.323896752706078 0.215425531914894],...
'Tag','uipanel1',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuipanelFontSizeMode'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'CheckTxt';

h22 = uicontrol(...
'Parent',h21,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Unchecked',...
'Style','text',...
'Position',[0.591346153846154 0.142857142857143 0.372596153846154 0.155844155844156],...
'Children',[],...
'Tag','CheckTxt',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'CheckBttn';

h23 = uicontrol(...
'Parent',h21,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Measure loop delay',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.598557692307692 0.337662337662338 0.341346153846154 0.168831168831169],...
'Callback',@(hObject,eventdata)RTDataGUI('CheckBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','CheckBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'SetBttn';

h24 = uicontrol(...
'Parent',h21,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Set',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.586538461538462 0.51948051948052 0.384615384615385 0.5],...
'Callback',@(hObject,eventdata)RTDataGUI('SetBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'KeyPressFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','SetBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'ConfigList';

h25 = uicontrol(...
'Parent',h21,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Unconfigured',...
'Style','listbox',...
'Value',1,...
'ValueMode',get(0,'defaultuicontrolValueMode'),...
'Position',[0.0456730769230769 0.0844155844155844 0.504807692307692 0.857142857142857],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RTDataGUI('ConfigList_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RTDataGUI('ConfigList_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','ConfigList',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'MatList';

h26 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',{  'Listbox' },...
'Style','listbox',...
'Value',1,...
'ValueMode',get(0,'defaultuicontrolValueMode'),...
'Position',[0.381803411860276 0.0836601307189542 0.584077985377742 0.266666666666667],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RTDataGUI('MatList_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RTDataGUI('MatList_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','MatList',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'uipanel5';

h27 = uipanel(...
'Parent',h1,...
'FontUnits',get(0,'defaultuipanelFontUnits'),...
'Units',get(0,'defaultuipanelUnits'),...
'Title','Saving options',...
'Position',[0.19 0.0556414219474498 0.175 0.309119010819165],...
'Clipping','off',...
'Tag','uipanel5',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuipanelFontSizeMode'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'SaveMatCheck';

h28 = uicontrol(...
'Parent',h27,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Save as .mat',...
'Style','checkbox',...
'Position',[0.114130434782609 0.682795698924731 0.603260869565217 0.123655913978495],...
'Callback',@(hObject,eventdata)RTDataGUI('SaveMatCheck_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','SaveMatCheck',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'SaveTxtCheck';

h29 = uicontrol(...
'Parent',h27,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Save as .txt',...
'Style','checkbox',...
'Position',[0.114130434782609 0.510752688172043 0.603260869565217 0.123655913978495],...
'Callback',@(hObject,eventdata)RTDataGUI('SaveTxtCheck_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'KeyPressFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','SaveTxtCheck',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'NameEdt';

h30 = uicontrol(...
'Parent',h27,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',{  'Edit Text' },...
'Style','edit',...
'Position',[0.0760869565217391 0.0645161290322581 0.875 0.204301075268817],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RTDataGUI('NameEdt_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RTDataGUI('NameEdt_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','NameEdt',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'text12';

h31 = uicontrol(...
'Parent',h27,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Name',...
'Style','text',...
'Position',[0.195767195767196 0.314506319741922 0.566137566137566 0.115183246073298],...
'Children',[],...
'Tag','text12',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'SaveBttn';

h32 = uicontrol(...
'Parent',h27,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Save now',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.466500829187396 0.836887508626639 0.459259259259259 0.124223602484472],...
'Callback',@(hObject,eventdata)RTDataGUI('SaveBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'KeyPressFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','SaveBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'NewBttn';

h33 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','New: as current',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.646170442286947 0.0262751159196291 0.116504854368932 0.0432766615146832],...
'Callback',@(hObject,eventdata)RTDataGUI('NewBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','NewBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'CloseBttn';

h34 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Close',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.868392664509169 0.0262751159196291 0.101402373247033 0.0432766615146832],...
'Callback',@(hObject,eventdata)RTDataGUI('CloseBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'KeyPressFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','CloseBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'EditNotesBttn';

h35 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Edit Notes',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.0306818181818182 0.0321543408360129 0.0818181818181818 0.0369774919614148],...
'Callback',@(hObject,eventdata)RTDataGUI('EditNotesBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','EditNotesBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'ChangeDirBttn';

h36 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Change Directory',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.376483279395901 0.0262751159196291 0.113268608414239 0.0432766615146832],...
'Callback',@(hObject,eventdata)RTDataGUI('ChangeDirBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','ChangeDirBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'SetCurrentBttn';

h37 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Set as current',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.50269687162891 0.0278207109737249 0.130528586839266 0.0417310664605873],...
'Callback',@(hObject,eventdata)RTDataGUI('SetCurrentBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','SetCurrentBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'ShowCurrentBttn';

h38 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Show current RT object',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.574973031283711 0.931993817619784 0.166127292340885 0.0494590417310664],...
'Callback',@(hObject,eventdata)RTDataGUI('ShowCurrentBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'KeyPressFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','ShowCurrentBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'CtrlSettingsBttn';

h39 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Settings',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.305785528512952 0.578057496136012 0.0479452054794521 0.0448],...
'Callback',@(hObject,eventdata)RTDataGUI('CtrlSettingsBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','CtrlSettingsBttn');

appdata = [];
appdata.lastValidTag = 'text15';

h40 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Type',...
'Style','text',...
'Position',[0.201848834803682 0.703695826893354 0.0351027397260274 0.0288],...
'Children',[],...
'Tag','text15',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'EmptyBttn';

h41 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','New: empty',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.773462783171521 0.0262751159196291 0.080906148867314 0.0432766615146832],...
'Callback',@(hObject,eventdata)RTDataGUI('EmptyBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'KeyPressFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'ButtonDownFcn',blanks(0),...
'Tag','EmptyBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));

appdata = [];
appdata.lastValidTag = 'GoBttn';

h42 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','GO',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[0.0262264733107066 0.118227554179567 0.13730330145017 0.237712848297214],...
'Callback',@(hObject,eventdata)RTDataGUI('GoBttn_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','GoBttn',...
'FontSize',10,...
'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );


hsingleton = h1;


% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)

if ~isempty(appdata)
   names = fieldnames(appdata);
   for i=1:length(names)
       name = char(names(i));
       setappdata(hObject, name, getfield(appdata,name));
   end
end

if ~isempty(createfcn)
   if isa(createfcn,'function_handle')
       createfcn(hObject, eventdata);
   else
       eval(createfcn);
   end
end


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)

gui_StateFields =  {'gui_Name'
    'gui_Singleton'
    'gui_OpeningFcn'
    'gui_OutputFcn'
    'gui_LayoutFcn'
    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error(message('MATLAB:guide:StateFieldNotFound', gui_StateFields{ i }, gui_Mfile));
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % RTDATAGUI
    % create the GUI only if we are not in the process of loading it
    % already
    gui_Create = true;
elseif local_isInvokeActiveXCallback(gui_State, varargin{:})
    % RTDATAGUI(ACTIVEX,...)
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif local_isInvokeHGCallback(gui_State, varargin{:})
    % RTDATAGUI('CALLBACK',hObject,eventData,handles,...)
    gui_Create = false;
else
    % RTDATAGUI(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = true;
end

if ~gui_Create
    % In design time, we need to mark all components possibly created in
    % the coming callback evaluation as non-serializable. This way, they
    % will not be brought into GUIDE and not be saved in the figure file
    % when running/saving the GUI from GUIDE.
    designEval = false;
    if (numargin>1 && ishghandle(varargin{2}))
        fig = varargin{2};
        while ~isempty(fig) && ~ishghandle(fig,'figure')
            fig = get(fig,'parent');
        end
        
        designEval = isappdata(0,'CreatingGUIDEFigure') || (isscalar(fig)&&isprop(fig,'GUIDEFigure'));
    end
        
    if designEval
        beforeChildren = findall(fig);
    end
    
    % evaluate the callback now
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else       
        feval(varargin{:});
    end
    
    % Set serializable of objects created in the above callback to off in
    % design time. Need to check whether figure handle is still valid in
    % case the figure is deleted during the callback dispatching.
    if designEval && ishghandle(fig)
        set(setdiff(findall(fig),beforeChildren), 'Serializable','off');
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end

    % Check user passing 'visible' P/V pair first so that its value can be
    % used by oepnfig to prevent flickering
    gui_Visible = 'auto';
    gui_VisibleInput = '';
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        % Recognize 'visible' P/V pair
        len1 = min(length('visible'),length(varargin{index}));
        len2 = min(length('off'),length(varargin{index+1}));
        if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1
            if strncmpi(varargin{index+1},'off',len2)
                gui_Visible = 'invisible';
                gui_VisibleInput = 'off';
            elseif strncmpi(varargin{index+1},'on',len2)
                gui_Visible = 'visible';
                gui_VisibleInput = 'on';
            end
        end
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.

    
    % Do feval on layout code in m-file if it exists
    gui_Exported = ~isempty(gui_State.gui_LayoutFcn);
    % this application data is used to indicate the running mode of a GUIDE
    % GUI to distinguish it from the design mode of the GUI in GUIDE. it is
    % only used by actxproxy at this time.   
    setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1);
    if gui_Exported
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);

        % make figure invisible here so that the visibility of figure is
        % consistent in OpeningFcn in the exported GUI case
        if isempty(gui_VisibleInput)
            gui_VisibleInput = get(gui_hFigure,'Visible');
        end
        set(gui_hFigure,'Visible','off')

        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen');
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        end
    end
    if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]))
        rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]));
    end

    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    % Singleton setting in the GUI M-file takes priority if different
    gui_Options.singleton = gui_State.gui_Singleton;

    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA. If there is
        % user set GUI data already, keep that also.
        data = guidata(gui_hFigure);
        handles = guihandles(gui_hFigure);
        if ~isempty(handles)
            if isempty(data)
                data = handles;
            else
                names = fieldnames(handles);
                for k=1:length(names)
                    data.(char(names(k)))=handles.(char(names(k)));
                end
            end
        end
        guidata(gui_hFigure, data);
    end

    % Apply input P/V pairs other than 'visible'
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        len1 = min(length('visible'),length(varargin{index}));
        if ~strncmpi(varargin{index},'visible',len1)
            try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end
        end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end

    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        % Handle the default callbacks of predefined toolbar tools in this
        % GUI, if any
        guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure); 
        
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);

        % Call openfig again to pick up the saved visibility or apply the
        % one passed in from the P/V pairs
        if ~gui_Exported
            gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);
        elseif ~isempty(gui_VisibleInput)
            set(gui_hFigure,'Visible',gui_VisibleInput);
        end
        if strcmpi(get(gui_hFigure, 'Visible'), 'on')
            figure(gui_hFigure);
            
            if gui_Options.singleton
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        if isappdata(gui_hFigure,'InGUIInitialization')
            rmappdata(gui_hFigure,'InGUIInitialization');
        end

        % If handle visibility is set to 'callback', turn it on until
        % finished with OutputFcn
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end

    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end

function gui_hFigure = local_openfig(name, singleton, visible)

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
if nargin('openfig') == 2
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
else
    % Call version of openfig that accepts 'auto' option"
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton, visible);  
%     %workaround for CreateFcn not called to create ActiveX
%     if feature('HGUsingMATLABClasses')
%         peers=findobj(findall(allchild(gui_hFigure)),'type','uicontrol','style','text');    
%         for i=1:length(peers)
%             if isappdata(peers(i),'Control')
%                 actxproxy(peers(i));
%             end            
%         end
%     end
end

function result = local_isInvokeActiveXCallback(gui_State, varargin)

try
    result = ispc && iscom(varargin{1}) ...
             && isequal(varargin{1},gcbo);
catch
    result = false;
end

function result = local_isInvokeHGCallback(gui_State, varargin)

try
    fhandle = functions(gui_State.gui_Callback);
    result = ~isempty(findstr(gui_State.gui_Name,fhandle.file)) || ...
             (ischar(varargin{1}) ...
             && isequal(ishghandle(varargin{2}), 1) ...
             && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...
                ~isempty(strfind(varargin{1}, '_CreateFcn'))) );
catch
    result = false;
end


